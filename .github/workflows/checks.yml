name: Code Analysis

on: [push] # pull_request]

jobs:
  analysis:
    runs-on: ubuntu-latest
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Error handling # https://github.com/actions/checkout/issues/317
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - uses: pre-commit/action@v2.0.0
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Run Tox
        run: |
          python -m tox -e docs
          python -m tox -e tests

      - name: Generate coverage report
        run: |
          pip install pytest
          pip install hcl
          pip install argparse
          pip install pytest-cov
          python -m pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true

#  check:
#    name: Check for modified files

#    runs-on: ubuntu-latest
#    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file ]]; then
              echo "Some files changed."
              echo "::set-output name=run_job::true"
              break
            else
              echo "::set-output name=run_job::false"
            fi
          done < files.txt

  job_for_modified_files:
    name: Job for modified files
    needs: check
    if: needs.check.outputs.run_job == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: run for modified files
        run: echo "This job runs only when any file gets modified."

      - name: Get current branch name
        id: vars
        run: |
          echo ::set-output name=branch_name::${GITHUB_REF##*/}

      - name: Commit files
        run: |
          git add -A .
          git config --local user.email "terraform+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A; git commit -m "Add changes"; git push

      # Create a pull request from develop to master branch
      - name: Pull requests
        if: ${{ steps.vars.outputs.branch_name }} == 'develop'
        uses: vsoch/pull-request-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_BRANCH: "main"
          PULL_REQUEST_FROM_BRANCH: ${{ github.ref }}
